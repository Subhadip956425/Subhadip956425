name: Generate Snake

# Controls when the action will run. This action runs every 6 hours.
on:
  schedule:
    # every 6 hours
    - cron: "0 */6 * * *"
  workflow_dispatch: # This allows running the Action manually from the Actions tab.

# The sequence of runs in this workflow:
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Explicitly grant write permissions to the repository
    steps:
      # Checks repo under $GITHUB_WORKSHOP, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v2

      # Generates the snake
      - name: Generate Snake GIF
        uses: Platane/snk@v3
        with:
          # GitHub username to read the contribution graph from (**required**)
          # using action context var `github.repository_owner` or specified user
          github_user_name: ${{ github.repository_owner }}
          # List of files to generate.
          # One file per line. Each output can be customized with options as query string.
          # Supported options:
          #  - palette:     A preset of color, one of [github, github-dark, github-light]
          #  - color_snake: Color of the snake
          #  - color_dots:  Comma-separated list of dots color.
          gif_out_path: dist/github-contribution-grid-snake.gif
          svg_out_path: dist/github-contribution-grid-snake.svg

      # Show the status of the build. Helps with debugging (if any issues occur).
      - name: Show repository status
        run: git status

      # Push the changes
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: master
          force: true  # Ensure that changes are force pushed even with conflicts

      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: crazy-max/ghaction-github-pages@v2.1.3
        with:
          target_branch: output  # The output branch we mentioned above
          build_dir: dist        # Directory containing the generated files
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
